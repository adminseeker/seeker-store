pipeline {
    agent none
    stages {
        stage('Code Checkout') {
            checkout scm
        }
        stage('Build And Convert to Docker Images') {
            agent docker-host
            options {
                // Timeout counter starts BEFORE agent is allocated
                timeout(time: 1, unit: 'SECONDS')
            }
            when { changeset "user-service/**" }
            steps {
                sh 'cd user-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "auth-service/**" }
            steps {
                sh 'cd auth-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "product-service/**" }
            steps {
                sh 'cd product-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "inventory-service/**" }
            steps {
                sh 'cd inventory-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "cart-service/**" }
            steps {
                sh 'cd cart-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "order-service/**" }
            steps {
                sh 'cd order-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "gateway-server/**" }
            steps {
                sh 'cd gateway-server && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "config-service/**" }
            steps {
                sh 'cd config-service && mvn clean spring-boot:build-image -DskipTests'
            }
            when { changeset "eureka-server/**" }
            steps {
                sh 'cd eureka-server && mvn clean spring-boot:build-image -DskipTests'
            }
        }
    }
}