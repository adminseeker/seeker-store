pipeline {
    agent { label 'docker-host'}
      environment {
        GITHUB_CREDENTIALS = credentials('github-secret-as-username-password')
    }
    stages {
        stage('Code Checkout') {
            steps{
                checkout scm
            }
        }
        stage('Docker Login') {
            steps {
                sh 'echo $GITHUB_CREDENTIALS_PSW | docker login ghcr.io -u $GITHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('Build Docker Images') {
            stages {
                stage("user-service build"){
                    // when { changeset "user-service/**" }
                    steps {
                        // sh "cd user-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                        // sh 'echo pushing package to github container registry...'
                        // sh "docker push ghcr.io/adminseeker/user-service:${BUILD_NUMBER}"
                        // sh 'cd ..'
                        // sh 'updating kubernetes manifest file...'
                        withCredentials([usernamePassword(credentialsId: 'github-secret-as-username-password', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                            sh '''
                                pwd
                                git config user.email "aravind.arali@gmail.com"
                                git config user.name "adminseeker"
                                BUILD_NUMBER=${BUILD_NUMBER}
                                GIT_USER_NAME=adminseeker
                                GIT_REPO_NAME=seeker-store
                                sed -i "s+ghcr.io/adminseeker/user-service.*+ghcr.io/adminseeker/user-service:+g${BUILD_NUMBER}" kubernetes/dev/services/userservice.yml
                                git add kubernetes/dev/services/userservice.yml
                                git commit -m "Update user-service image to version ${BUILD_NUMBER}"
                                git push https://${GITHUB_USERNAME}:${GIT_PASSWORD}@github.com/$GIT_USER_NAME/$GIT_REPO_NAME dev
                            '''
                        }
                    }
                }
                // stage("auth-service build"){
                //     when { changeset "auth-service/**" }
                //     steps {
                //         sh "cd auth-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/auth-service:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/auth-service.*+ghcr.io/adminseeker/auth-service:+g${BUILD_NUMBER}" kubernetes/dev/services/authservice.yml
                //                 git add kubernetes/dev/services/authservice.yml
                //                 git commit -m "Update auth-service image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("product-service build"){
                //     when { changeset "product-service/**" }
                //     steps {
                //         sh "cd product-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/product-service:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/product-service.*+ghcr.io/adminseeker/product-service:+g${BUILD_NUMBER}" kubernetes/dev/services/productservice.yml
                //                 git add kubernetes/dev/services/productservice.yml
                //                 git commit -m "Update product-service image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("inventory-service build"){
                //     when { changeset "inventory-service/**" }
                //     steps {
                //         sh "cd inventory-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/inventory-service:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/inventory-service.*+ghcr.io/adminseeker/inventory-service:+g${BUILD_NUMBER}" kubernetes/dev/services/inventoryservice.yml
                //                 git add kubernetes/dev/services/inventoryservice.yml
                //                 git commit -m "Update inventory-service image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("cart-service build"){
                //     when { changeset "cart-service/**" }
                //     steps {
                //         sh "cd cart-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/cart-service:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/cart-service.*+ghcr.io/adminseeker/cart-service:+g${BUILD_NUMBER}" kubernetes/dev/services/cartservice.yml
                //                 git add kubernetes/dev/services/cartservice.yml
                //                 git commit -m "Update cart-service image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("order-service build"){
                //     when { changeset "order-service/**" }
                //     steps {
                //         sh "cd order-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/order-service:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/order-service.*+ghcr.io/adminseeker/order-service:+g${BUILD_NUMBER}" kubernetes/dev/services/orderservice.yml
                //                 git add kubernetes/dev/services/orderservice.yml
                //                 git commit -m "Update order-service image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("gateway-server build"){
                //     when { changeset "gateway-server/**" }
                //     steps {
                //         sh "cd gateway-server && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/gateway-server:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/gateway-server.*+ghcr.io/adminseeker/gateway-server:+g${BUILD_NUMBER}" kubernetes/dev/services/gatewayserver.yml
                //                 git add kubernetes/dev/services/gatewayserver.yml
                //                 git commit -m "Update gateway-server image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("config-service build"){
                //     when { changeset "config-service/**" }
                //     steps {
                //         sh "cd config-service && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/config-service:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/config-service.*+ghcr.io/adminseeker/config-service:+g${BUILD_NUMBER}" kubernetes/dev/services/configservice.yml
                //                 git add kubernetes/dev/services/configservice.yml
                //                 git commit -m "Update config-service image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }
                // stage("eureka-server build"){
                //     when { changeset "eureka-server/**" }
                //     steps {
                //         sh "cd eureka-server && mvn clean spring-boot:build-image -DskipTests -DimageVersion=${BUILD_NUMBER}"
                //         sh 'echo pushing package to github container registry...'
                //         sh "docker push ghcr.io/adminseeker/eureka-server:${BUILD_NUMBER}"
                //         sh 'cd ..'
                //         sh 'updating kubernetes manifest file...'
                //         withCredentials([string(credentialsId: 'github-secret-as-username-password', variable: 'GITHUB_TOKEN')]) {
                //             sh '''
                //                 git config user.email "aravind.arali@gmail.com"
                //                 git config user.name "adminseeker"
                //                 BUILD_NUMBER=${BUILD_NUMBER}
                //                 sed -i "s+ghcr.io/adminseeker/eureka-server.*+ghcr.io/adminseeker/eureka-server:+g${BUILD_NUMBER}" kubernetes/dev/services/eurekaserver.yml
                //                 git add kubernetes/dev/services/eurekaserver.yml
                //                 git commit -m "Update eureka-server image to version ${BUILD_NUMBER}"
                //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} dev
                //             '''
                //         }
                //     }
                // }   
            
            }
        }
    }
}